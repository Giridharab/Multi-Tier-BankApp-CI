pipeline {
    agent any
    
    parameters {
        string(name: 'DOCKER_IMAGETAG', defaultValue: 'latest', description: 'Docker ImageTag')
    }
    
    tools {
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Clear Workspace') {
            steps {
                cleanWs() //clear the workspace
            }
        }
        stage('Git-Checkout') {
            steps {
                git branch: 'main', credentialsId: 'git-cred', url: 'https://github.com/Giridharab/Multi-Tier-BankApp-CI.git'
            }
        }
    stage('Compile') {
            steps {
                sh "mvn compile"
            }
        }
    stage('Unit-Test') {
            steps {
                sh "mvn test -DskipTests=true"
            }
        }
    stage('Trivy-scan') {
            steps {
                sh "trivy fs --format table -o fs.html ."
            }
        }
    stage('Sonar-Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=bankapp -Dsonar.projectKey=bankapp \
                -Dsonar.java.binaries=target '''
        }
            }
        }
    stage('Build-Publish-Nexus') {
            steps {
                withMaven(globalMavenSettingsConfig: 'maven-settings-bankapp', jdk: '', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
                sh "mvn deploy -DskipTests=true"
        }
            }
        }
    stage('Docker-Build') {
            steps {
                script{
                    // This step should not normally be used in your script. Consult the inline help for details.
                    withDockerRegistry(credentialsId: 'dockerhub-cred') {
                    sh "docker build -t girib1608/bankapp:${params.DOCKER_IMAGETAG} ."
                    }
                }
            }
        }
    stage('DockerImage-Scan') {
            steps {
                sh "trivy image --format table -o dockerImage.html girib1608/bankapp:${params.DOCKER_IMAGETAG}"
            }
        }
    stage('Docker-Push') {
            steps {
                script{
                    // This step should not normally be used in your script. Consult the inline help for details.
                    withDockerRegistry(credentialsId: 'dockerhub-cred') {
                    sh "docker push girib1608/bankapp:${params.DOCKER_IMAGETAG}"
                    }
                }
            }
        }
    stage('Update-bankapp-yaml') {
            steps {
                script{
                    withCredentials([gitUsernamePassword(credentialsId: 'git-cred', gitToolName: 'Default')]) {
                        sh '''
                        
                        git clone https://github.com/Giridharab/Multi-Tier-BankApp-CD.git
                        
                        cd Multi-Tier-BankApp-CD
                        
                        ls -l bankapp
                        
                        repo_dir=$(pwd)
                        
                        sed -i 's|image: girib1608/bankapp:.*|image: girib1608/bankapp:'${DOCKER_IMAGETAG}'|' $repo_dir/bankapp/bankapp-ds.yml
                        '''
                        //confirm yaml updated
                        sh '''
                        echo "Updated yaml file:bankapp/bankapp-ds.yml"
                        cat Multi-Tier-BankApp-CD/bankapp/bankapp-ds.yml
                        '''
                         //condifgure git
                        sh '''
                        cd Multi-Tier-BankApp-CD
                        git config user.email "b28136788@gmail.com"
                        git config user.name "girib1608"
                        '''
                    
                        // commit the chages
                        sh'''
                        cd Multi-Tier-BankApp-CD
                        ls -l
                        git add bankapp/bankapp-ds.yml
                        git commit -m "update docker image:${DOCKER_IMAGETAG}"
                        git push origin main
                        '''
                    
                    
            }
                }
            }
        }
    
    }
}
